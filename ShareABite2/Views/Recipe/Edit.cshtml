@model ShareABite2.Models.RecipeModel
@using Microsoft.AspNet.Identity;

@{
	ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>RecipeModel</h4>
<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Edit">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="RecipeId" />
			<div class="form-group">
				<label asp-for="RecipeName" class="control-label"></label>
				<input asp-for="RecipeName" class="form-control" />
				<span asp-validation-for="RecipeName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="DateAdded" class="control-label"></label>
				<input disabled asp-for="DateAdded" class="form-control" />
				<span asp-validation-for="DateAdded" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="DateEdited" class="control-label"></label>
				<input type="text" disabled asp-for="DateEdited" class="form-control" value="@DateTime.Now" />
				<span asp-validation-for="DateEdited" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Story" class="control-label"></label>
				<textarea asp-for="Story" rows="5" class="form-control"></textarea>
				<span asp-validation-for="Story" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Description" class="control-label"></label>
				<textarea asp-for="Description" rows="5" class="form-control"></textarea>
				<span asp-validation-for="Description" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ImgUrl" class="control-label"></label>
				<input asp-for="ImgUrl" class="form-control" />
				<span asp-validation-for="ImgUrl" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input type="file" name="pic" accept="image/*" class="form-control" placeholder="Image from Web" aria-describedby="sizing-addon2"
					   name='image' id="image" value="upload" d onchange="handleFiles(this.files)">
				<span id="imgPreview"></span>
				<br>
				<progress id="uploader" value="0" max="100">0%</progress>
				<span id="uploadstatus"></span>
			</div>
			<div class="form-group">
				<label asp-for="OvenTemp" class="control-label"></label>
				<input asp-for="OvenTemp" class="form-control" />
				<span asp-validation-for="OvenTemp" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Servings" class="control-label"></label>
				<input asp-for="Servings" class="form-control" />
				<span asp-validation-for="Servings" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="PrepTime" class="control-label"></label>
				<input asp-for="PrepTime" class="form-control" />
				<span asp-validation-for="PrepTime" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="CookTime" class="control-label"></label>
				<input asp-for="CookTime" class="form-control" />
				<span asp-validation-for="CookTime" class="text-danger"></span>
			</div>
			<div class="form-group">
				<div class="checkbox">
					<label>
						<input asp-for="Public" /> @Html.DisplayNameFor(model => model.Public)
					</label>
				</div>
			</div>
			<div class="form-group">
				<label asp-for="IngredientsJson" class="control-label"></label>
				<textarea asp-for="IngredientsJson" class="form-control" rows="5"></textarea>
				<span asp-validation-for="IngredientsJson" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="DirectionsJson" class="control-label"></label>
				<textarea asp-for="DirectionsJson" class="form-control" rows="5"></textarea>
				<span asp-validation-for="DirectionsJson" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="UserId" class="control-label"></label>
				<input type="hidden" asp-for="UserId" class="form-control" />
				<span asp-validation-for="UserId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Difficulty" class="control-label"></label>
				<input asp-for="Difficulty" class="form-control" min="0" max="10" />
				<span asp-validation-for="Difficulty" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="RecipeGenre" class="control-label"></label>
				<Select asp-for="RecipeGenre" class="form-control">
					<option value="1">Breakfast</option>
					<option value="2">Lunch</option>
					<option value="3">Dinner</option>
					<option value="4">Dessert</option>
					<option value="5">Snack</option>
					<option value="6">Vegetarian</option>
					<option value="7">Vegan</option>
					<option value="8">Gluten Free</option>
					<option value="9">Gluten Free</option>
				</Select>
				<span asp-validation-for="RecipeGenre" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-action="Index">Back to List</a>
</div>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<script src="https://www.gstatic.com/firebasejs/4.6.1/firebase.js"></script>
<script>

	var ingNum = 2,
		dirNum = 2;

	var config = {
		apiKey: "AIzaSyCgoRfIkQr6LbDgERECflwrP4Dmi2-TPKA",
		authDomain: "grab-a-bite-df6c2.firebaseapp.com",
		databaseURL: "https://grab-a-bite-df6c2.firebaseio.com",
		projectId: "grab-a-bite-df6c2",
		storageBucket: "grab-a-bite-df6c2.appspot.com",
		messagingSenderId: "915542502205"
	};
	firebase.initializeApp(config);


	var database = firebase.database();
	var defaultAuth = firebase.auth();
	var img;
	var thefile
	var rImage;
	var uid = '@User.Identity.GetUserId()';

	function handleFiles(files) {
		$('#imgPreview').html('');
		for (var i = 0; i < files.length; i++) {
			file = files[i];

			if (!file.type.startsWith('image/')) {
				continue
			}

			img = document.createElement("img");
			img.classList.add("obj");
			img.file = file;
			document.getElementById('imgPreview').appendChild(img);

			var reader = new FileReader();
			reader.onload = (function (aImg) {
				return function (e) {
					aImg.src = e.target.result;
				};
			})(img);
			reader.readAsDataURL(file);
		}
	}

	var v
	// Create a root reference
	var uploader = document.getElementById('uploader');
	var fileButton = document.getElementById('image');
	fileButton.addEventListener('change', function (e) {
		$('#uploadstatus').html(
			'<br>The image is uploading...<br><strong>Do not refresh the page or navigate away.<br><br></strong>')

		var file = e.target.files[0];
		var storageRef = firebase.storage().ref(uid + '/recipe_img/' + file.name);
		var task = storageRef.put(file);
		task.on('state_changed', function progress(snapshot) {
			var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
			uploader.value = percentage;
			console.log('snapshot')
			console.log(snapshot)
			console.log('image url');
			v = snapshot

		}, function error(err) {
			console.log(err)

		}, function complete(data) {
			console.log(data);
			$('#uploadstatus').html('<br>Upload Complete!<br><br>')
			console.log('snapshot in done');
			console.log(v);
			rImage = v.task.N.downloadURLs[0];
			$('#ImgUrl').val(rImage)
			console.log(rImage)
		});
	});
</script>
